name: Github Actions
on:
  push:
    branches:
      - main
      - dev
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  # CI checks for Rust and Python
  rust-ci:
    name: Rust CI
    runs-on: ubuntu-latest
    steps:
      - name: Setup the repository
        uses: actions/checkout@v4
      - name: Setup the toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Rust format check
        run: cargo fmt --all -- --check
      - name: Rust cargo check
        run: cargo check
      - name: Rust clippy
        run: cargo clippy
      - name: Run rust tests
        run: cargo test --all-features

  python-ci:
    name: Python CI
    runs-on: ubuntu-latest
    needs: [ rust-ci ]
    strategy:
      matrix:
        target: [ x86_64 ]
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python code style & linting
        uses: chartboost/ruff-action@v1
        with:
          src: biobit/py
          version: 0.9.3
          args: check
      # Maturin doesn't follow directory symlinks at the moment so we need to 'resolve' them manually
      - name: Resolve symlinks
        run: |
          for link in $(find . -type l)
          do
              source="$(readlink -e $link)"
              rm "${link}"
              cp --remove-destination --recursive "${source}" "${link}"
          done
      - name: Install dependencies
        run: |
          # Install the package and all the relevant dependencies
          python -m pip install -v 'biobit/py[dev]'
      - name: Mypy type checks
        run: |
          mypy --config-file biobit/py/pyproject.toml biobit/py
      - name: Tests
        run: |
          pytest -x biobit/py

  # Try building wheels for the Python package
  linux:
    name: Build Linux Python wheels
    runs-on: ubuntu-latest
    needs: [ python-ci ]
    strategy:
      matrix:
        target: [ x86_64 ]
        python: [ '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Resolve symlinks
        run: |
          for link in $(find . -type l)
          do
              source="$(readlink -e $link)"
              rm "${link}"
              cp --remove-destination --recursive "${source}" "${link}"
          done
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: biobit/py
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.target }}-${{ matrix.python }}-wheels
          path: biobit/py/dist

  # Release the Python package on PyPI
  release:
    name: Release PyPI package
    runs-on: ubuntu-latest
    needs: [ linux ]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          pattern: '*-wheels'
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
