name: Python Continuous Deployment
on:
  workflow_run:
    workflows: [ "Rust & Python CI checks" ]
    types: [ "completed" ]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64 ]
        python: [ '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Resolve symlinks
        run: |
          for link in $(find . -type l)
          do
              source="$(readlink -e $link)"
              rm "${link}"
              cp --remove-destination --recursive "${source}" "${link}"
          done
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: biobit/py
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        if: ${{ github.event.workflow_run.conclusion == 'success' && startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.target }}-${{ matrix.python }}-wheels
          path: biobit/py/dist

  release:
    name: Release PYPI package
    runs-on: ubuntu-latest
    # Only run if the commit is tagged and CI checks were successful
    if: ${{ github.event.workflow_run.conclusion == 'success' && startsWith(github.ref, 'refs/tags/v') }}
    needs: [ linux ]
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          pattern: '*-wheels'
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
