name: Rust & Python CI/CD
on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  rust:
    name: Rust CI
    runs-on: ubuntu-latest
    steps:
      - name: Setup the repository
        uses: actions/checkout@v4
      - name: Setup the environment
        uses: prefix-dev/setup-pixi@v0.8.2
        with:
          pixi-version: v0.43.3
          environments: "dev"
          cache: false
          activate-environment: true
      - name: Rust CI checks
        run: pixi run -e dev rs-ci

  python:
    name: Python CI
    needs: [ rust ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ "py-3-13t" ]
    steps:
      - name: Setup the repository
        uses: actions/checkout@v4
      - name: Setup the environment
        uses: prefix-dev/setup-pixi@v0.8.2
        with:
          pixi-version: v0.43.3
          environments: ${{ matrix.python }}
          cache: false
          activate-environment: true
      - name: Python CI checks
        run: pixi run -e ${{ matrix.python }} ci

  linux-wheels:
    name: Build python wheels [Linux]
    needs: [ python ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64 ]
        python: [ '3.12 3.13 3.13t' ]
    steps:
      - name: Setup the repository
        uses: actions/checkout@v4
      - name: Resolve symlinks
        run: |
          for link in $(find . -type l)
          do
              source="$(readlink -e $link)"
              rm "${link}"
              cp --remove-destination --recursive "${source}" "${link}"
          done
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: biobit/py
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter ${{ matrix.python }}
          rust-toolchain: 1.84.0
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.target }}-${{ matrix.python }}-wheels
          path: biobit/py/dist

  pypi-release:
    name: Release PYPI package
    needs: [ linux-wheels ]
    # Only run if the commit is tagged and CI checks were successful
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          pattern: '*-wheels'
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
